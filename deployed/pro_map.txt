puzzle.audio.Audio -> a:
    javax.microedition.media.Player player -> a
    boolean tocando -> b
    void run() -> run
    void start() -> a
    void stop() -> b
    boolean isTocando() -> c
puzzle.foto.Fotos -> b:
    puzzle.principal.PuzzleMIDlet midlet -> a
    javax.microedition.lcdui.Command voltar -> b
    javax.microedition.lcdui.Command salvar -> c
    javax.microedition.lcdui.Command deletar -> d
    javax.microedition.lcdui.Command tirarFoto -> e
    puzzle.util.ImagemUtil imagemUtil -> f
    puzzle.foto.ManterFoto manterFoto -> g
    puzzle.util.DadosJogo dadosJogo -> h
    int tamFoto -> i
    javax.microedition.lcdui.List fotos -> j
    void verificarPrecisaAddImagensPadrao() -> a
    void carregarFotos() -> b
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
    void voltarMenu() -> c
puzzle.foto.ManterFoto -> c:
    puzzle.util.Imagens imagens -> a
    void salvarFoto(byte[]) -> a
    javax.microedition.lcdui.Image carregarFoto(int) -> a
    void deletaFoto(int) -> b
    javax.microedition.lcdui.Image[] getTodasImagens() -> a
puzzle.foto.TirarFoto -> d:
    javax.microedition.media.Player player -> a
    javax.microedition.media.control.VideoControl videoControl -> b
    javax.microedition.lcdui.Command capturaFoto -> c
    javax.microedition.lcdui.Command salvarFoto -> d
    javax.microedition.lcdui.Command voltar -> e
    javax.microedition.lcdui.Form mostraFoto -> f
    puzzle.principal.PuzzleMIDlet midlet -> g
    byte[] foto -> h
    puzzle.foto.ManterFoto manterFoto -> i
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
    void run() -> run
    void paint(javax.microedition.lcdui.Graphics) -> paint
puzzle.inicio.TelaInicial -> e:
    puzzle.principal.PuzzleMIDlet midlet -> a
    javax.microedition.lcdui.Command bSomOn -> b
    javax.microedition.lcdui.Command bSomOff -> c
    javax.microedition.lcdui.Image fundo -> d
    javax.microedition.lcdui.Image somOn -> e
    javax.microedition.lcdui.Image somOff -> f
    puzzle.util.Imagens imagens -> g
    puzzle.util.ImagemUtil imagemUtil -> h
    int largAltImgSom -> i
    boolean selecionarSom -> j
    void paint(javax.microedition.lcdui.Graphics) -> paint
    void keyPressed(int) -> keyPressed
    void pointerPressed(int,int) -> pointerPressed
    void iniciarMenu() -> a
    void setarEstadoSom(boolean) -> a
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
puzzle.menu.Configuracao -> f:
    puzzle.principal.PuzzleMIDlet midlet -> a
    puzzle.util.DadosJogo dadosJogo -> b
    puzzle.util.Imagens imagens -> c
    javax.microedition.lcdui.Command ok -> d
    javax.microedition.lcdui.Gauge pecas -> e
    javax.microedition.lcdui.ChoiceGroup audio -> f
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
puzzle.menu.Menu -> g:
    puzzle.principal.PuzzleMIDlet midlet -> a
    puzzle.util.Imagens imagens -> b
    puzzle.util.ImagemUtil imagemUtil -> c
    int menuSelecionado -> d
    int itemSelecionado -> e
    java.lang.String[][] menu -> f
    int larguraItem -> g
    int alturaItem -> h
    int margemItem -> i
    javax.microedition.lcdui.Image[][] imagensMenu -> j
    javax.microedition.lcdui.Image[][] imagensSelecionadoMenu -> k
    void carregarImagensMenus() -> a
    void paint(javax.microedition.lcdui.Graphics) -> paint
    int getAlturaPintaItem(int) -> a
    void keyPressed(int) -> keyPressed
    void menus() -> b
    void pointerPressed(int,int) -> pointerPressed
puzzle.parabens.Parabens -> h:
    puzzle.principal.PuzzleMIDlet midlet -> a
    int[] coresPontos -> b
    puzzle.parabens.PontoVoador[] pontos -> c
    boolean animar -> d
    puzzle.ranking.Ranking ranking -> e
    puzzle.util.ImagemUtil imagemUtil -> f
    puzzle.util.DadosJogo dadosJogo -> g
    puzzle.foto.ManterFoto manterFoto -> h
    javax.microedition.lcdui.Image foto -> i
    long tempoJog -> j
    long movimentosJog -> k
    void paint(javax.microedition.lcdui.Graphics) -> paint
    void keyPressed(int) -> keyPressed
    void pointerPressed(int,int) -> pointerPressed
    void iniciarMenu() -> a
    puzzle.parabens.PontoVoador[] access$0(puzzle.parabens.Parabens) -> a
    int[] access$1(puzzle.parabens.Parabens) -> b
    boolean access$2(puzzle.parabens.Parabens) -> c
puzzle.parabens.Parabens$1 -> i:
    puzzle.parabens.Parabens this$0 -> a
    void run() -> run
puzzle.parabens.Parabens$2 -> j:
    puzzle.parabens.Parabens this$0 -> a
    void run() -> run
puzzle.parabens.PontoVoador -> k:
    int cor -> a
    int x -> b
    int y -> c
    int oscilacao -> d
    boolean esquerda -> e
    int altura -> f
    void atualizar() -> a
puzzle.principal.Movimentos -> puzzle.principal.a:
    puzzle.principal.Puzzle jogo -> a
    long movimentosJog -> b
    puzzle.util.DadosJogo dadosJogo -> c
    void realizaJogada(int) -> a
    void alterarPosicaoPecas(int) -> b
    void embaralhar() -> a
    void moverPecaPorClique(int,int) -> a
    long getMovimentosJog() -> b
puzzle.principal.Puzzle -> puzzle.principal.b:
    int alturaPeca -> a
    int larguraPeca -> b
    int corFundo -> c
    int corLinha -> d
    puzzle.principal.PuzzleMIDlet midlet -> e
    puzzle.util.JogoUtils jogoUtils -> f
    puzzle.principal.Movimentos movimentos -> g
    puzzle.util.DadosJogo dadosJogo -> h
    javax.microedition.lcdui.Command desenhaFoto -> i
    javax.microedition.lcdui.Command desenhaLinha -> j
    javax.microedition.lcdui.Command desenhaNumero -> k
    javax.microedition.lcdui.Command embaralhar -> l
    javax.microedition.lcdui.Command sair -> m
    javax.microedition.lcdui.game.TiledLayer desenho -> n
    int[][] pecas -> o
    int posicaoDoZeroX -> p
    int posicaoDoZeroY -> q
    int ppX -> r
    int ppY -> s
    int margem -> t
    long tempoJog -> u
    boolean desenharFoto -> v
    boolean desenharLinha -> w
    boolean desenharNumero -> x
    void paint(javax.microedition.lcdui.Graphics) -> paint
    void desenhar(javax.microedition.lcdui.Graphics,int) -> a
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
    void keyPressed(int) -> keyPressed
    void pointerReleased(int,int) -> pointerReleased
    void pointerPressed(int,int) -> pointerPressed
    void ganhou() -> a
    void carregaOpcaoDesenharNumeros() -> e
    void carregaOpcaoDesenharLinhas() -> f
    void carregaOpcaoDesenharFoto() -> g
    int getPosicaoDoZeroX() -> b
    void setPosicaoDoZeroX(int) -> a
    int getPosicaoDoZeroY() -> c
    void setPosicaoDoZeroY(int) -> b
    int[][] getPecas() -> d
puzzle.principal.PuzzleMIDlet -> puzzle.principal.PuzzleMIDlet:
    javax.microedition.lcdui.Displayable displayable -> a
    puzzle.audio.Audio audio -> b
    void destroyApp(boolean) -> destroyApp
    void pauseApp() -> pauseApp
    void startApp() -> startApp
    void setDisplayable(javax.microedition.lcdui.Displayable) -> a
    puzzle.audio.Audio getAudio() -> a
puzzle.ranking.AdicionarRanking -> l:
    puzzle.principal.PuzzleMIDlet midlet -> a
    javax.microedition.lcdui.TextField tf -> b
    javax.microedition.lcdui.Command nSalvar -> c
    javax.microedition.lcdui.Command salvar -> d
    puzzle.ranking.Ranking ranking -> e
    long tempoJog -> f
    long movimentosJog -> g
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
puzzle.ranking.DadosRanking -> m:
    java.lang.String nome -> a
    long tempo -> b
    long movimentos -> c
    java.lang.String getNome() -> a
    long getTempo() -> b
    long getMovimentos() -> c
    java.lang.String getTempoFormatado() -> d
puzzle.ranking.Ranking -> n:
    puzzle.principal.PuzzleMIDlet midlet -> a
    puzzle.util.DadosJogo dadosJogo -> b
    javax.microedition.lcdui.Command voltar -> c
    int deslocamentoX -> d
    int deslocamentoY -> e
    int margemMovimento -> f
    void paint(javax.microedition.lcdui.Graphics) -> paint
    puzzle.ranking.DadosRanking[] carregaLista(java.lang.String) -> a
    boolean addRecord(puzzle.ranking.DadosRanking) -> a
    boolean isPodeAdicionar(long) -> a
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
    java.lang.String getNomeBanco() -> a
    void keyPressed(int) -> keyPressed
    void keyRepeated(int) -> keyRepeated
puzzle.util.DadosJogo -> o:
    int qtdPecasJogo -> a
    int numImagemSelecionada -> b
    void salvarQtdPecasJogo(int) -> a
    void salvarImagemSelecionada(int) -> b
    void salvar(int,int) -> a
    void inicializarBanco(javax.microedition.rms.RecordStore) -> a
    int getValor(int) -> c
    int getQtdPcsJogo() -> a
    int getNumImagemSelecionada() -> b
puzzle.util.ImagemUtil -> p:
    javax.microedition.lcdui.Image redimencionarImagem(javax.microedition.lcdui.Image,int,int) -> a
puzzle.util.Imagens -> q:
    java.lang.String getCaminhoImagem(java.lang.String) -> a
puzzle.util.JogoUtils -> r:
    int[][] carregarPecas(int) -> a
